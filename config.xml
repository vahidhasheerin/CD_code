<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1239.v71b_b_a_124a_725">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2114.v2654ca_721309"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2114.v2654ca_721309">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2801.vf82a_b_b_e3e8a_5">
    <script>pipeline {
    agent {label &apos;osm-cicd&apos;}
    environment {
        PATH = &quot;${PATH}:${getTerraformPath()}&quot;
    }
    stages {
        stage(&apos;CD_CODE_checkout&apos;) {
            steps {
              checkout([$class: &apos;GitSCM&apos;, 
                branches: [[name: &apos;*/main&apos;]],
                doGenerateSubmoduleConfigurations: false,
                extensions: [[$class: &apos;CleanCheckout&apos;]],
                submoduleCfg: [], 
                userRemoteConfigs: [[url: &apos;https://github.com/vahidhasheerin/CD_code.git&apos;]]])
                
              sh &quot;ls -ltr&quot;
          }
        }
        stage(&quot;terraform init&quot;){
            steps{
                sh &quot;terraform init&quot;
            }
        }
         stage(&quot;terraform plan&quot;){
            steps{
                sh &quot;terraform plan&quot;
            }
        }
        stage(&quot;terraform apply&quot;){
            steps{
                sh &quot;terraform apply -auto-approve&quot;
            }
        }
    }
}
def getTerraformPath(){
    def tfHome = tool name: &apos;terraform-12&apos;, type: &apos;terraform&apos;
    return tfHome
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>